<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GEOS</title>
    <link>https://libgeos.org/</link>
    <description>Recent content on GEOS</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 04 Oct 2021 14:13:20 -0700</lastBuildDate><atom:link href="https://libgeos.org/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GEOS RFC 11 - GEOS Version and EOL Policy</title>
      <link>https://libgeos.org/project/rfcs/rfc11/</link>
      <pubDate>Mon, 12 Sep 2022 00:00:00 -0400</pubDate>
      
      <guid>https://libgeos.org/project/rfcs/rfc11/</guid>
      <description>RFC 11 End-of-Life (EOL) Policy Author Regina Obe Contact lr@pcorp.us Status Accepted, September 20, 2022 This document describes the GEOS project policy for versioning and EOLing GEOS minor versions.
Versioning The GEOS project generally produces a new minor version every 1-2 years. Minor versions typically contain new features, as well as bug fixes and performance improvements. Minor versions have version numbers in the form major.minor (e.g. 3.9, 3.10, 3.11, etc).</description>
    </item>
    
    <item>
      <title>GEOS RFC 10 - Move Project to GitHub</title>
      <link>https://libgeos.org/project/rfcs/rfc10/</link>
      <pubDate>Fri, 29 Oct 2021 00:00:00 -0700</pubDate>
      
      <guid>https://libgeos.org/project/rfcs/rfc10/</guid>
      <description>RFC 10 Move Project to GitHub Author Paul Ramsey Contact pramsey@cleverelephant.ca Status Accepted, November 9, 2021 GitHub has been the largest source of 3rd party code contribution via pull-requests for some time now.
Moving to Github has the following components:
Move the canonical (writeable) repository to GitHub Migrate the (current, useful) contents of the Trac wiki to the new web framework Deleting the migrated and out-of-date contents of the Trac wiki Switching the Trac tickets to read-only Web scraping the Trac ticket contents and placing in a geos-old-tickets repo At that point:</description>
    </item>
    
    <item>
      <title>Testing</title>
      <link>https://libgeos.org/project/development/tests/</link>
      <pubDate>Mon, 04 Oct 2021 14:21:00 -0700</pubDate>
      
      <guid>https://libgeos.org/project/development/tests/</guid>
      <description>Testing executables are in bin
See also the ctest documentation. Unit Tests The GEOS unit tests are written using the TUT framework. There are tests for both the C++ code and the C API. The test source files are in the test/unit directory. The test group names are in the group declaration in each XXXTest.cpp file. By convention the test group name is based on the test file path and name.</description>
    </item>
    
    <item>
      <title>Code of Conduct</title>
      <link>https://libgeos.org/project/coc/</link>
      <pubDate>Wed, 16 Feb 2022 00:00:00 -0700</pubDate>
      
      <guid>https://libgeos.org/project/coc/</guid>
      <description>Introduction This code of conduct governs how we behave in any GEOS forum or event and whenever we will be judged by our actions. We expect it to be honored by everyone who participates in the GEOS community formally or informally, or claims any affiliation with the GEOS project.
It applies to in-person events (such as conferences and related social events), IRC, public and private mailing lists, the issue tracker, the wiki, blogs, Twitter, and any other forums which the community uses for communication and interactions.</description>
    </item>
    
    <item>
      <title>Project Steering Committee</title>
      <link>https://libgeos.org/project/psc/</link>
      <pubDate>Wed, 27 Oct 2021 00:00:00 -0700</pubDate>
      
      <guid>https://libgeos.org/project/psc/</guid>
      <description>The GEOS project is run by a Project Steering Committee made up of developers and contributors to the project and is a project of OSGeo. Major project decisions are made via a Request for Comments (RFC) process, where proposals are first documented and then voted on by the steering committee.
This PSC list is valid as of February 18th, 2022.
Dan Baston Howard Butler Martin Davis Regina Obe Paul Ramsey (chair) Sandro Santilli The PSC approves major changes and RFC documents.</description>
    </item>
    
    <item>
      <title>API Docs</title>
      <link>https://libgeos.org/usage/doxygen/</link>
      <pubDate>Mon, 04 Oct 2021 13:44:59 -0700</pubDate>
      
      <guid>https://libgeos.org/usage/doxygen/</guid>
      <description>The Doxygen documentation is the most up-to-date reference for the C and C++ API of GEOS.
C API C++ API See also:
C API tutorial C++ API tutorial. Code examples are available in the code repository.</description>
    </item>
    
    <item>
      <title>C API Programming</title>
      <link>https://libgeos.org/usage/c_api/</link>
      <pubDate>Mon, 04 Oct 2021 14:21:00 -0700</pubDate>
      
      <guid>https://libgeos.org/usage/c_api/</guid>
      <description>Most programs using GEOS use the C API, rather than building against the C++ headers. The C API offers several benefits:
Stable API, that preserves behaviour and function naming over multiple releases. Stable ABI, allowing new binaries to be dropped into place without requiring a rebuild of dependent applications. Simple access pattern, using the simple features model as the basis for most operations. In exchange for this simplicity and stability, the C API has a few requirements from application authors:</description>
    </item>
    
    <item>
      <title>C&#43;&#43; API Programming</title>
      <link>https://libgeos.org/usage/cpp_api/</link>
      <pubDate>Mon, 04 Oct 2021 14:21:00 -0700</pubDate>
      
      <guid>https://libgeos.org/usage/cpp_api/</guid>
      <description>The GEOS C++ API is included in the collection of header files installed in include/geos which is a very large collection. Effectively it includes both &amp;ldquo;public&amp;rdquo; headers that a user might be expected to make use of and &amp;ldquo;private&amp;rdquo; headers that are mostly only used by internal algorithms. Currently, the two kinds of headers are not marked in any way, nor is there an easy way to disentagle them.
You can explore the C++ model via the Doxygen reference.</description>
    </item>
    
    <item>
      <title>CI Status</title>
      <link>https://libgeos.org/project/development/ci_status/</link>
      <pubDate>Mon, 04 Oct 2021 14:21:00 -0700</pubDate>
      
      <guid>https://libgeos.org/project/development/ci_status/</guid>
      <description>CI main 3.13 3.12 3.11 3.10 3.9 GitHub Debbie Winnie Dronie Bessie Berrie Berrie64 Runners GitHub - Ubuntu various, Windows various, MacOS various, CMake Debbie - Debian sid (bullseye), GNU/Linux 64bit, GCC Debian 10.2.1, cmake (3.18.4) &amp;gt;= 3.9, autotools &amp;lt; 3.8 Winnie - Windows Mingw64, 32bit GCC 8.1.0, 64bit GCC 8.1.0, MSys CMake (3.21.3), 64-bit GCC 12.1 (cmake 3.23.2 ninja) Dronie - Alpine Linux 3.14 (alpine.latest), 64bit, GCC 10.3.1, CMake (3.</description>
    </item>
    
    <item>
      <title>Tools</title>
      <link>https://libgeos.org/usage/tools/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://libgeos.org/usage/tools/</guid>
      <description>GeosOp Usage JTS TestBuilder GeosOp geosop is a CLI (command-line interface) for GEOS. It can be used to:
Run GEOS operations on one or many geometries Output geometry results in various formats (WKT and WKB) Convert between WKT and WKB Time the performance of operations Check for memory leaks in operations Check the semantics of GEOS operations For more information see the README.
Usage The geosop executable is in bin.</description>
    </item>
    
    <item>
      <title>Bindings</title>
      <link>https://libgeos.org/usage/bindings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://libgeos.org/usage/bindings/</guid>
      <description>GEOS can be accessed from a variety of other languages via bindings to the library.
Go gogeos Haskell geos hgeos Javascript node-geos Julia LibGEOS.jl PHP php-geos. GeoPHP. Python Python bindings are available via:
Shapely PyGEOS Calling functions from libgeos_c via Python ctypes GeoPandas R sf geos Ruby RGeo. Rust geos crate Swift GeoSwift Geospatial applications using GEOS include:
Databases PostGIS INGRES MonetDB SpatiaLite CockroachDB DuckDB Applications GDAL/OGR GRASS GIS MapServer MapGuide Open Source MapWindow GIS osgEarth QGIS </description>
    </item>
    
    <item>
      <title>FAQ</title>
      <link>https://libgeos.org/usage/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://libgeos.org/usage/faq/</guid>
      <description>Design and Architecture Why is the C++ API not kept stable? Why does GEOS follow JTS design? Spatial Model Does GEOS support computation on the geodetic ellipsoid? Robustness Why does GEOSIntersects(GEOSIntersection(A, B), A) == false? Why doesn&amp;rsquo;t a computed point lie exactly on a line? Design and Architecture Why is the C++ API not kept stable? The C++ API is very large, and may have changes in every release. It is evolving to adopt modern C++ coding practices, and often has additions and removals as GEOS spatial algorithms get enhanced.</description>
    </item>
    
    <item>
      <title>Download and Build</title>
      <link>https://libgeos.org/usage/download/</link>
      <pubDate>Thu, 21 Aug 2025 00:00:00 +0000</pubDate>
      
      <guid>https://libgeos.org/usage/download/</guid>
      <description>Download Project Release Release Date First Release Final Release Download Link Changes 3.14.0 2025/08/21 2025/08/21 2029/10/01 geos-3.14.0.tar.bz2 Changes 3.13.1 2025/03/03 2024/09/06 2028/10/01 geos-3.13.1.tar.bz2 Changes 3.12.3 2025/03/03 2023/06/27 2027/07/01 geos-3.12.3.tar.bz2 Changes 3.11.5 2025/03/03 2022/07/01 2026/07/01 geos-3.11.5.tar.bz2 Changes 3.10.7 2025/03/03 2021/10/20 2025/10/20 geos-3.10.7.tar.bz2 Changes Old releases can be downloaded from https://download.osgeo.org/geos/. Any releases not in this list are end-of-life (EOL). Refer to our EOL policy for details. All Final Release dates are subject to change.</description>
    </item>
    
    <item>
      <title>Version 3.14.0</title>
      <link>https://libgeos.org/posts/2025-08-21-geos-3-14-released/</link>
      <pubDate>Thu, 21 Aug 2025 00:00:00 +0000</pubDate>
      
      <guid>https://libgeos.org/posts/2025-08-21-geos-3-14-released/</guid>
      <description>&lt;p&gt;The 3.14 release of GEOS is now available &lt;a
  class=&#34;gdoc-markdown__link&#34;
  href=&#34;https://libgeos.org/usage/download/&#34;
&gt;to download&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The headline features of this release are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Coverage cleaning for polygonal coverages.
&lt;ul&gt;
&lt;li&gt;Remove small gaps and overlaps.&lt;/li&gt;
&lt;li&gt;Control the tolerance of gap removal.&lt;/li&gt;
&lt;li&gt;Choose between different gap removal heuristics.
&lt;ul&gt;
&lt;li&gt;Longest-border, max area, min area&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Clustering algorithms in the C API.
&lt;ul&gt;
&lt;li&gt;Exposing previously C++ only implementations into the C API for wider usage.&lt;/li&gt;
&lt;li&gt;DBSCAN, Intersects, Envelope Intersects, and others&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Grid cell overlay with polygon.
&lt;ul&gt;
&lt;li&gt;Beyond the flood-fill, get actual proportions of each cell covered.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This release includes the following new features in the C API (and of course underlying changes to the C++ code to support these features):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GEOSCoordSeq_hasZ(coordseq) returns boolean&lt;/li&gt;
&lt;li&gt;GEOSCoordSeq_hasM(coordseq) returns boolean&lt;/li&gt;
&lt;li&gt;GEOSCoordSeq_setM(coordseq, index, value) sets the M ordinate on a point in a sequence&lt;/li&gt;
&lt;li&gt;GEOSCoordSeq_getM(coordseq, index) reads the M ordinate on a point in a sequence&lt;/li&gt;
&lt;li&gt;GEOSCoverageClean() and GEOSCoverageCleanWithParams(), with GEOSCoverageCleanParams for control over polygonal coverage cleaning&lt;/li&gt;
&lt;li&gt;GEOSGridIntersectionFractions() for grid cell overlay&lt;/li&gt;
&lt;li&gt;GEOSisSimpleDetail() to show where a linestring is not simple (self crossing points usually)&lt;/li&gt;
&lt;li&gt;GEOSClusterDBSCAN(), GEOSClusterGeometryDistance(), GEOSClusterGeometryIntersects(), GEOSClusterEnvelopeDistance(), GEOSClusterEnvelopeIntersects() as CAPI clustering functions&lt;/li&gt;
&lt;li&gt;GEOSGeoJSONWriter_setOutputDimension() for greater control of JSON output of 3 and 4 dimensional geometry.&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>GEOS 2025 Patch Releases</title>
      <link>https://libgeos.org/posts/2025-03-03-patch-releases/</link>
      <pubDate>Mon, 03 Mar 2025 00:00:00 +0000</pubDate>
      
      <guid>https://libgeos.org/posts/2025-03-03-patch-releases/</guid>
      <description>&lt;p&gt;All the stable branches have had some maintenance work over the past year, and this release catches all branches up to the current state of development.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a
  class=&#34;gdoc-markdown__link&#34;
  href=&#34;https://github.com/libgeos/geos/blob/3.13.1/NEWS.md&#34;
&gt;3.13.1 Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a
  class=&#34;gdoc-markdown__link&#34;
  href=&#34;https://github.com/libgeos/geos/blob/3.12.3/NEWS.md&#34;
&gt;3.12.3 Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a
  class=&#34;gdoc-markdown__link&#34;
  href=&#34;https://github.com/libgeos/geos/blob/3.11.5/NEWS.md&#34;
&gt;3.11.5 Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a
  class=&#34;gdoc-markdown__link&#34;
  href=&#34;https://github.com/libgeos/geos/blob/3.10.7/NEWS&#34;
&gt;3.10.7 Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a
  class=&#34;gdoc-markdown__link&#34;
  href=&#34;https://github.com/libgeos/geos/blob/3.9.6/NEWS&#34;
&gt;3.9.6 Release Notes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Source downloads &lt;a
  class=&#34;gdoc-markdown__link&#34;
  href=&#34;https://libgeos.org/usage/download/&#34;
&gt;are available&lt;/a&gt; now, and distributions should be updating their builds over the next several weeks.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Version 3.13.0</title>
      <link>https://libgeos.org/posts/2024-09-06-geos-3-13-released/</link>
      <pubDate>Fri, 06 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>https://libgeos.org/posts/2024-09-06-geos-3-13-released/</guid>
      <description>&lt;p&gt;The 3.13 release of GEOS is now available &lt;a
  class=&#34;gdoc-markdown__link&#34;
  href=&#34;https://libgeos.org/usage/download/&#34;
&gt;to download&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The headline features of this release are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A new approach to boolean predicates via &lt;a
  class=&#34;gdoc-markdown__link&#34;
  href=&#34;https://libgeos.org/posts/2024-08-13-relateng/&#34;
&gt;RelateNG&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Faster performance for many cases where a short circuit is available&lt;/li&gt;
&lt;li&gt;Avoiding the full computation of a topology graph for every call&lt;/li&gt;
&lt;li&gt;Ability to use a high speed &amp;ldquo;prepared&amp;rdquo; approach for the complete set of predicates as well as the relate matrix functions&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Initial support for ISO SQL/MM curve types&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create, read and write support for CircularString, CompoundCurve, CurvedPolygon, MultiCurve, MultiSurface&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This release includes the following new features in the C API (and of course underlying changes to the C++ code to support these features):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GEOSGeom_createEmptyCircularString() creates a new empty CircularString&lt;/li&gt;
&lt;li&gt;GEOSGeom_createCircularString(coordseq) creates a CircularString with the supplied coordinates&lt;/li&gt;
&lt;li&gt;GEOSGeom_createEmptyCompoundCurve() creates a new empty CompoundCurve&lt;/li&gt;
&lt;li&gt;GEOSGeom_createCompoundCurve(curves, ncurves) creates a CompoundCurve with the supplied components (start/end coordinates must match up)&lt;/li&gt;
&lt;li&gt;GEOSGeom_createEmptyCurvePolygon() creates a new empty CurvePolygon&lt;/li&gt;
&lt;li&gt;GEOSGeom_createCurvePolygon(shell, holes, nholes) creates a CurvePolygon with the supplied rings&lt;/li&gt;
&lt;li&gt;GEOSPreparedRelate(prepgeom, geom) generates a &lt;a
  class=&#34;gdoc-markdown__link&#34;
  href=&#34;https://en.wikipedia.org/wiki/DE-9IM&#34;
&gt;DE9IM&lt;/a&gt; intersection matrix for the geometry pair, where one input has been &amp;ldquo;prepared&amp;rdquo; for fast repeated calls&lt;/li&gt;
&lt;li&gt;GEOSPreparedRelatePattern(prepgeom, geom, pattern) tests a pair of geometry against a known DE9IM pattern to see if the relationship is consistent with the pattern&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>RelateNG</title>
      <link>https://libgeos.org/posts/2024-08-13-relateng/</link>
      <pubDate>Tue, 13 Aug 2024 00:00:00 +0000</pubDate>
      
      <guid>https://libgeos.org/posts/2024-08-13-relateng/</guid>
      <description>&lt;p&gt;The upcoming 3.13 release of GEOS includes a complete re-write of the &amp;ldquo;boolean predicates&amp;rdquo;, called &amp;ldquo;RelateNG&amp;rdquo;. The boolean predicates are pairwise tests for geometries that return true/false answers.  &amp;ldquo;Intersects&amp;rdquo;, &amp;ldquo;Contains&amp;rdquo;, &amp;ldquo;Touches&amp;rdquo; are all examples of boolean predicates.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Version 3.9.5 and 3.8.4 EOL</title>
      <link>https://libgeos.org/posts/2023-11-12-geos-3-9-5-and-3-8-4-released/</link>
      <pubDate>Sun, 12 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://libgeos.org/posts/2023-11-12-geos-3-9-5-and-3-8-4-released/</guid>
      <description>As part of a batch release of patches for stable branches, the 3.9.5 release of GEOS is now available to download. In addition this release cycle includes the final release of GEOS 3.8 series, GEOS 3.8.4. If you haven&amp;rsquo;t already upgraded to a newer GEOS minor version from GEOS 3.8, we highly recommend you do so.
Release notes for 3.8.4 and 3.9.5 are below: 3.8.4, 3.9.5,</description>
    </item>
    
    <item>
      <title>Version 3.12.1</title>
      <link>https://libgeos.org/posts/2023-11-11-geos-3-12-1-released/</link>
      <pubDate>Sat, 11 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://libgeos.org/posts/2023-11-11-geos-3-12-1-released/</guid>
      <description>&lt;p&gt;As part of a batch release of patches for stable branches, the 3.12.1 release of GEOS is now available &lt;a
  class=&#34;gdoc-markdown__link&#34;
  href=&#34;https://libgeos.org/usage/download/&#34;
&gt;to download&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Release notes for the various branches are available:
&lt;a
  class=&#34;gdoc-markdown__link&#34;
  href=&#34;https://github.com/libgeos/geos/blob/3.10.6/NEWS&#34;
&gt;3.10.6&lt;/a&gt;,
&lt;a
  class=&#34;gdoc-markdown__link&#34;
  href=&#34;https://github.com/libgeos/geos/blob/3.11.3/NEWS.md&#34;
&gt;3.11.3&lt;/a&gt;,
&lt;a
  class=&#34;gdoc-markdown__link&#34;
  href=&#34;https://github.com/libgeos/geos/blob/3.12.1/NEWS.md&#34;
&gt;3.12.1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The 3.12.1 release is a bug fix release.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Version 3.12.0</title>
      <link>https://libgeos.org/posts/2023-06-27-geos-3-12-released/</link>
      <pubDate>Tue, 27 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://libgeos.org/posts/2023-06-27-geos-3-12-released/</guid>
      <description>&lt;p&gt;The 3.12 release of GEOS is now available &lt;a
  class=&#34;gdoc-markdown__link&#34;
  href=&#34;https://libgeos.org/usage/download/&#34;
&gt;to download&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;This release includes the following new features in the C API (and of course underlying changes to the C++ code to support these features):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GEOSDisjointSubsetUnion, anptimized union algorithm for inputs that can be divided into subsets.&lt;/li&gt;
&lt;li&gt;GEOSLineSubstring, to clip a line using a start and end fractional length.&lt;/li&gt;
&lt;li&gt;GEOSEqualsIdentical, to test exact equality (with regards to order, structure, etc) of two geometries.&lt;/li&gt;
&lt;li&gt;GEOSOrientPolygons, to enforce a ring orientation on all polygonal elements in the input geometry.&lt;/li&gt;
&lt;li&gt;GEOSSTRtree_build, to force an immediate build of an STRtree.&lt;/li&gt;
&lt;li&gt;GEOSConcaveHullByLength, to build a concave hull by removing the longest outer edges of the Delaunay Triangulation of the space between the polygons, until the specified maximm edge length is reached&lt;/li&gt;
&lt;li&gt;GEOSGeomGetM, to read the M-dimensional value of a geometry.&lt;/li&gt;
&lt;li&gt;GEOSVoronoiDiagram, returns the Voronoi polygons or edges of the vertices of the given geometry.&lt;/li&gt;
&lt;li&gt;GEOSCoverageSimplifyVW, GEOSCoverageUnion, GEOSCoverageIsValid for working with &amp;ldquo;polygonal coverages&amp;rdquo;, collections of polygons that follow coverage rules (no overlaps, exact vertex equivalence on shared edges).&lt;/li&gt;
&lt;li&gt;GEOSGeom_releaseCollection, to free a collection while leaving the sub-geometries intact.&lt;/li&gt;
&lt;li&gt;GEOSMinimumRotatedRectangle, a rework of the minimum rectangle code to be faster and more correct.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;GEOS has been updated to read and write &amp;ldquo;M&amp;rdquo; dimension. As with the &amp;ldquo;Z&amp;rdquo; coordinate support, not all operations can preserve the &amp;ldquo;M&amp;rdquo; dimension, but best efforts are made to retain it through calculations, input and output.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Much work on the core code of GEOS was carried out with a maintenance grant funded by the GDAL project and &lt;a
  class=&#34;gdoc-markdown__link&#34;
  href=&#34;https://www.mail-archive.com/gdal-dev@lists.osgeo.org/msg39018.html&#34;
&gt;carried out by Dan Baston&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Version 3.11.2</title>
      <link>https://libgeos.org/posts/2023-03-16-geos-3-11-2-released/</link>
      <pubDate>Thu, 16 Mar 2023 00:00:00 +0000</pubDate>
      
      <guid>https://libgeos.org/posts/2023-03-16-geos-3-11-2-released/</guid>
      <description>&lt;p&gt;As part of a batch release of patches for stable branches, the 3.11.2 release of GEOS is now available &lt;a
  class=&#34;gdoc-markdown__link&#34;
  href=&#34;https://libgeos.org/usage/download/&#34;
&gt;to download&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Release notes for the various branches are available:
&lt;a
  class=&#34;gdoc-markdown__link&#34;
  href=&#34;https://github.com/libgeos/geos/blob/3.10.5/NEWS&#34;
&gt;3.10.5&lt;/a&gt;, and
&lt;a
  class=&#34;gdoc-markdown__link&#34;
  href=&#34;https://github.com/libgeos/geos/blob/3.11.2/NEWS&#34;
&gt;3.11.2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The 3.11.2 release is a bug fix release.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Version 3.11.1</title>
      <link>https://libgeos.org/posts/2022-11-14-geos-3-11-1-released/</link>
      <pubDate>Mon, 14 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://libgeos.org/posts/2022-11-14-geos-3-11-1-released/</guid>
      <description>&lt;p&gt;As part of a batch release of patches for stable branches, the 3.11.1 release of GEOS is now available &lt;a
  class=&#34;gdoc-markdown__link&#34;
  href=&#34;https://libgeos.org/usage/download/&#34;
&gt;to download&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Release notes for the various branches are available:
&lt;a
  class=&#34;gdoc-markdown__link&#34;
  href=&#34;https://github.com/libgeos/geos/blob/3.9.4/NEWS&#34;
&gt;3.9.4&lt;/a&gt;,
&lt;a
  class=&#34;gdoc-markdown__link&#34;
  href=&#34;https://github.com/libgeos/geos/blob/3.10.4/NEWS&#34;
&gt;3.10.4&lt;/a&gt;, and
&lt;a
  class=&#34;gdoc-markdown__link&#34;
  href=&#34;https://github.com/libgeos/geos/blob/3.11.1/NEWS&#34;
&gt;3.11.1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The 3.11.1 release is a bug fix release.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Version 3.11.0</title>
      <link>https://libgeos.org/posts/2022-07-01-geos-3-11-0-released/</link>
      <pubDate>Fri, 01 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://libgeos.org/posts/2022-07-01-geos-3-11-0-released/</guid>
      <description>&lt;p&gt;The 3.11.0 release of GEOS is now available &lt;a
  class=&#34;gdoc-markdown__link&#34;
  href=&#34;https://libgeos.org/usage/download/&#34;
&gt;to download&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This release includes new features for building &amp;ldquo;concave hulls&amp;rdquo; for both point and polygon input. For polygon input, the hull will be guaranteed to not cross into the interiors of the input polygons.&lt;/p&gt;
&lt;p&gt;The line merger has been enhanced to support a mode that only merges lines which share orientation.&lt;/p&gt;
&lt;p&gt;The offset curve algorithm has been updated to be more reliable for different kinds of semi-degenerate inputs, and may output different curves than the previous implementation, for those kinds of inputs. For &amp;ldquo;normal&amp;rdquo; inputs, the results should look very much like the old implementation.&lt;/p&gt;
&lt;p&gt;As usual, numerous bugs have been fixed, and a few performance improvements discovered and implemented.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Version 3.10.3</title>
      <link>https://libgeos.org/posts/2022-06-03-geos-3-10-3-released/</link>
      <pubDate>Fri, 03 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://libgeos.org/posts/2022-06-03-geos-3-10-3-released/</guid>
      <description>&lt;p&gt;As part of a batch release of patches for all stable branches, the 3.10.3 release of GEOS is now available &lt;a
  class=&#34;gdoc-markdown__link&#34;
  href=&#34;https://libgeos.org/usage/download/&#34;
&gt;to download&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Release notes for the various branches are available:
&lt;a
  class=&#34;gdoc-markdown__link&#34;
  href=&#34;https://github.com/libgeos/geos/blob/3.7.4/NEWS&#34;
&gt;3.7.4&lt;/a&gt;,
&lt;a
  class=&#34;gdoc-markdown__link&#34;
  href=&#34;https://github.com/libgeos/geos/blob/3.8.3/NEWS&#34;
&gt;3.8.3&lt;/a&gt;,
&lt;a
  class=&#34;gdoc-markdown__link&#34;
  href=&#34;https://github.com/libgeos/geos/blob/3.9.3/NEWS&#34;
&gt;3.9.3&lt;/a&gt; and
&lt;a
  class=&#34;gdoc-markdown__link&#34;
  href=&#34;https://github.com/libgeos/geos/blob/3.10.3/NEWS&#34;
&gt;3.10.3&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The 3.10.3 release is a bug fix release.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Version 3.10.2</title>
      <link>https://libgeos.org/posts/2021-11-02-geos-3-10-2-released/</link>
      <pubDate>Sat, 15 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://libgeos.org/posts/2021-11-02-geos-3-10-2-released/</guid>
      <description>&lt;p&gt;The 3.10.2 release of GEOS is now available &lt;a
  class=&#34;gdoc-markdown__link&#34;
  href=&#34;https://libgeos.org/usage/download/&#34;
&gt;to download&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This release is a bug fix release.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Version 3.10.1</title>
      <link>https://libgeos.org/posts/2021-11-02-geos-3-10-1-released/</link>
      <pubDate>Tue, 02 Nov 2021 00:00:00 +0000</pubDate>
      
      <guid>https://libgeos.org/posts/2021-11-02-geos-3-10-1-released/</guid>
      <description>&lt;p&gt;The 3.10.1 release of GEOS is now available &lt;a
  class=&#34;gdoc-markdown__link&#34;
  href=&#34;https://libgeos.org/usage/download/&#34;
&gt;to download&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This release is primarily to fix some version numbering issues in the initial 3.10.0 source tarball. Some extra fixes are bundled as well.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Version 3.10.0</title>
      <link>https://libgeos.org/posts/2021-10-01-geos-3-10-released/</link>
      <pubDate>Thu, 21 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://libgeos.org/posts/2021-10-01-geos-3-10-released/</guid>
      <description>&lt;p&gt;The 3.10 release of GEOS is now available &lt;a
  class=&#34;gdoc-markdown__link&#34;
  href=&#34;https://libgeos.org/usage/download/&#34;
&gt;to download&lt;/a&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;This release includes the following new features in the C API (and of course underlying changes to the C++ code to support these features):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CAPI additions for testing whether geometries are within a distance of each other, &lt;code&gt;GEOSDistanceWithin&lt;/code&gt; and &lt;code&gt;GEOSPreparedDistanceWithin&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;CAPI addition for adding extra vertices to a geometry, &lt;code&gt;GEOSDensify&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;CAPI additions for high-performance construction/reading of coordinate sequences from/to memory buffers, &lt;code&gt;GEOSCoordSeq_copyFromArrays&lt;/code&gt;, &lt;code&gt;GEOSCoordSeq_copyFromBuffer&lt;/code&gt;, &lt;code&gt;GEOSCoordSeq_copyToArrays&lt;/code&gt;, and &lt;code&gt;GEOSCoordSeq_copyToBuffer&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;CAPI addition for new validity enforement algorithm, &lt;code&gt;GEOSMakeValidWithParams&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;CAPI addition for ISO WKB output, &lt;code&gt;GEOSWKBWriter_getFlavor&lt;/code&gt; and &lt;code&gt;GEOSWKBWriter_setFlavor&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;CAPI addition to create a constrained delaunay of polygonal input, &lt;code&gt;GEOSConstrainedDelaunayTriangulation&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>GEOS RFC 1 - Project Steering Committee</title>
      <link>https://libgeos.org/project/rfcs/rfc01/</link>
      <pubDate>Mon, 04 Oct 2021 14:21:00 -0700</pubDate>
      
      <guid>https://libgeos.org/project/rfcs/rfc01/</guid>
      <description>This document describes how the PSC GEOS Project Steering Committee determines membership, and makes decisions on all aspects of the GEOS project - both technical and non-technical.
RFC 1 Project Steering Committee Author Paul Ramsey Contact pramsey@cleverelephant.ca Status Approved, April 10, 2008 Summary This document describes how the GEOS Project Steering Committee (PSC) determines membership, and makes decisions on all aspects of the GEOS project - both technical and non-technical.</description>
    </item>
    
    <item>
      <title>GEOS RFC 2 - Committer Guidelines </title>
      <link>https://libgeos.org/project/rfcs/rfc02/</link>
      <pubDate>Mon, 04 Oct 2021 14:21:00 -0700</pubDate>
      
      <guid>https://libgeos.org/project/rfcs/rfc02/</guid>
      <description>This document describes the technical and legal responsibilities of [wiki:PSC GEOS committers].
RFC 2 Committer Guidelines Author Paul Ramsey, Regina Obe Contact pramsey@cleverelephant.ca, lr@pcorp.us Status Draft Summary This document describes the technical and legal responsibilities of [wiki:PSC GEOS committers].
Election to GIT Commit Access Permission for GIT commit access shall be provided to new developers only if accepted by the [wiki:PSC GEOS Project Steering Committee]. A proposal should be written to the PSC for new committers and voted on normally.</description>
    </item>
    
    <item>
      <title>GEOS RFC 3 - Thread Safe CAPI </title>
      <link>https://libgeos.org/project/rfcs/rfc03/</link>
      <pubDate>Mon, 04 Oct 2021 14:21:00 -0700</pubDate>
      
      <guid>https://libgeos.org/project/rfcs/rfc03/</guid>
      <description>Summary The current CAPI in GEOS is not thread safe. The error handling and initialization/finalization process specifically can cause problems.
Definitions (As defined by Frank Warmerdam in http://trac.osgeo.org/gdal/wiki/rfc16_ogr_reentrancy)
Reentrant: A reentrant function can be called simultaneously by multiple threads provided that each invocation of the function references unique data.
Thread-safe: A thread-safe function can be called simultaneously by multiple threads when each invocation references shared data. All access to the shared data is serialized.</description>
    </item>
    
    <item>
      <title>GEOS RFC 4 - Code Formatting Style</title>
      <link>https://libgeos.org/project/rfcs/rfc04/</link>
      <pubDate>Mon, 04 Oct 2021 14:21:00 -0700</pubDate>
      
      <guid>https://libgeos.org/project/rfcs/rfc04/</guid>
      <description>This document proposes and describes desired code formatting style used across C/C++ source code in GEOS.
RFC 4 Code Formatting Style Author Mateusz Łoskot Contact mateusz@loskot.net Status Dropped (no agreement) Summary The document proposes and describes desired default code formatting style guidelines for GEOS programming in C and C++ languages.
The goal of this document is to initiate process to reach an agreement for the default code formatting style.
Motivation There is a need to decide on format of GEOS source code and apply such globally consistent format to GEOS C/C++ codebase.</description>
    </item>
    
    <item>
      <title>GEOS RFC 5 - C&#43;&#43;11 Compilation Mode</title>
      <link>https://libgeos.org/project/rfcs/rfc05/</link>
      <pubDate>Mon, 04 Oct 2021 14:21:00 -0700</pubDate>
      
      <guid>https://libgeos.org/project/rfcs/rfc05/</guid>
      <description>This document proposes and describes desired code formatting style used across C/C++ source code in GEOS.
RFC 5 C++11 Compilation Mode Author Mateusz Łoskot Contact mateusz@loskot.net Status Accepted (no agreement) Summary The document proposes to switch to C++11 compilation mode as default throughout the whole C++ source code of GEOS.
The goal of the document is to request and achieve agreement on using C++11 as the minimum required version of the C++ programming language standard.</description>
    </item>
    
    <item>
      <title>GEOS RFC 6 - Require explicit configure to use the C&#43;&#43; API</title>
      <link>https://libgeos.org/project/rfcs/rfc06/</link>
      <pubDate>Mon, 04 Oct 2021 14:21:00 -0700</pubDate>
      
      <guid>https://libgeos.org/project/rfcs/rfc06/</guid>
      <description>RFC 9 Require explicit configure to use the C++ API Author Regina Obe Contact lr@pcorp.us Status Not Passed Past discussions Trac ticket to deprecate another request to deprecate and osm2pgsql mess more examples about how apps linking directly to GEOS C++ causing problems for other applications Pointing out removing ability to use GEOS C++ reduces users freedoms
Summary This document proposes to change the ./configure and CMake to by default only allow use of the C-API.</description>
    </item>
    
    <item>
      <title>GEOS RFC 7 - Use CMake for Build System</title>
      <link>https://libgeos.org/project/rfcs/rfc07/</link>
      <pubDate>Mon, 04 Oct 2021 14:21:00 -0700</pubDate>
      
      <guid>https://libgeos.org/project/rfcs/rfc07/</guid>
      <description>RFC 7 Use CMake for build system Author Daniel Baston Contact dbaston@gmail.com Status Accepted, January 15, 2021 This document proposes to use CMake as the build system for GEOS and discontinue use of autotools and NMake.
Since version 3.5, we have officially supported building GEOS with CMake: https://trac.osgeo.org/geos/wiki/BuildingOnUnixWithCMake
GEOS is also required to build with autotools and NMake.
Supporting three build systems:
Decreases ease of contribution, because any change must be tested against all three build systems.</description>
    </item>
    
    <item>
      <title>GEOS RFC 8 - Improve Coordinate Sequence API (WIP)</title>
      <link>https://libgeos.org/project/rfcs/rfc08/</link>
      <pubDate>Mon, 04 Oct 2021 14:21:00 -0700</pubDate>
      
      <guid>https://libgeos.org/project/rfcs/rfc08/</guid>
      <description>RFC 8 Improve Coordinate Sequence API Author Martin Davis Contact martin.davis@crunchydata.com Status In Discussion This document proposes to modify the Coordinate Sequence API to improve performance and adaptiveness.
These improvements are (likely to be) breaking changes to the C++ API.
These may require extensions to the C API to be externally available, but should not result in breaking the current C API.
Background The Coordinate Sequence API as it stands imposes a large cost on clients.</description>
    </item>
    
    <item>
      <title>GEOS RFC 9 - Restore the C&#43;&#43; API (WIP)</title>
      <link>https://libgeos.org/project/rfcs/rfc09/</link>
      <pubDate>Mon, 04 Oct 2021 14:21:00 -0700</pubDate>
      
      <guid>https://libgeos.org/project/rfcs/rfc09/</guid>
      <description>RFC 9 Restore the C++ API Author Mateusz Łoskot Contact mateusz@loskot.net Status [https://lists.osgeo.org/pipermail/geos-devel/2019-May/008972.html Proposed] The GEOS library is a C++ library offering two kinds of public API: C++ API and C API.
The GEOS library started as a C++ library. The C API was introduced in version 2.2.
The GEOS library has never promised any stability of the C++ API and this fact has always been documented and clearly stated:</description>
    </item>
    
    <item>
      <title>GeoJSON</title>
      <link>https://libgeos.org/specifications/geojson/</link>
      <pubDate>Mon, 04 Oct 2021 14:18:42 -0700</pubDate>
      
      <guid>https://libgeos.org/specifications/geojson/</guid>
      <description>&amp;ldquo;GeoJSON&amp;rdquo; is a standard for structuring JSON when encoding geometry and features. By using GeoJSON, rather than some other arbitrary scheme for structuring JSON, you maximize the interoperability of your JSON output. There are dozens of tools and websites that happily consume and emit GeoJSON.
The GeoJSON standard is formally maintained by the IETF as &amp;ldquo;RFC 7946&amp;rdquo;.
Unlike WKB and WKT, GeoJSON does not restrict itself to just geometry representation. It also standardizes the transport of attribution.</description>
    </item>
    
    <item>
      <title>Well-Known Binary (WKB)</title>
      <link>https://libgeos.org/specifications/wkb/</link>
      <pubDate>Mon, 04 Oct 2021 14:18:42 -0700</pubDate>
      
      <guid>https://libgeos.org/specifications/wkb/</guid>
      <description>&amp;ldquo;Well-known binary&amp;rdquo; is a scheme for writing a simple features geometry into a platform-independent array of bytes, usually for transport between systems or between programs. By using WKB, systems can avoid exposing their particular internal implementation of geometry storage, for greater overall interoperability.
GEOS can read and write three &amp;ldquo;flavours&amp;rdquo; of WKB:
Standard WKB Extended WKB ISO WKB When reading WKB, GEOS will transparently detect the flavour of WKB and automatically read it.</description>
    </item>
    
    <item>
      <title>Well-Known Text (WKT)</title>
      <link>https://libgeos.org/specifications/wkt/</link>
      <pubDate>Mon, 04 Oct 2021 14:18:42 -0700</pubDate>
      
      <guid>https://libgeos.org/specifications/wkt/</guid>
      <description>&amp;ldquo;Well-known text&amp;rdquo; is a scheme for writing a simple features geometry into a standard text string.
Examples POINT (0 0) POINT EMPTY LINESTRING (0 0, 0 1, 1 2) LINESTRING EMPTY POLYGON ((0 0, 1 0, 1 1, 0 1, 0 0)) POLYGON ((0 0, 4 0, 4 4, 0 4, 0 0), (1 1, 1 2, 2 2, 2 1, 1 1)) POLYGON EMPTY MULTIPOINT ((0 0), (1 1)) MULTILINESTRING ((0 0, 1 1), (2 2, 3 3)) MULTIPOLYGON (((1 1, 1 3, 3 3, 3 1, 1 1)), ((4 3, 6 3, 6 1, 4 1, 4 3))) GEOMETRYCOLLECTION (MULTIPOINT((0 0), (1 1)), POINT(3 4), LINESTRING(2 3, 3 4)) POINTZ (0 0 0) POINT Z (0 0 0) POINT Z EMPTY POINTM (0 0 0) POINT M (0 0 0) POINTZM (0 0 0 0) POINT ZM (0 0 0 0) WKT BNF &amp;lt;x&amp;gt; ::= &amp;lt;number&amp;gt; &amp;lt;y&amp;gt; ::= &amp;lt;number&amp;gt; &amp;lt;z&amp;gt; ::= &amp;lt;number&amp;gt; &amp;lt;m&amp;gt; ::= &amp;lt;number&amp;gt; &amp;lt;empty set&amp;gt; ::= EMPTY &amp;lt;zm&amp;gt; ::= ZM | Z | M &amp;lt;comma&amp;gt; ::= , &amp;lt;left paren&amp;gt; ::= ( &amp;lt;right paren&amp;gt; ::= ) &amp;lt;point&amp;gt; ::= &amp;lt;x&amp;gt; &amp;lt;y&amp;gt; [ &amp;lt;z&amp;gt; ] [ &amp;lt;m&amp;gt; ] &amp;lt;point text&amp;gt; ::= &amp;lt;empty set&amp;gt; | &amp;lt;left paren&amp;gt; &amp;lt;point&amp;gt; &amp;lt;right paren&amp;gt; &amp;lt;linestring text&amp;gt; ::= &amp;lt;empty set&amp;gt; | &amp;lt;left paren&amp;gt; &amp;lt;point&amp;gt; {&amp;lt;comma&amp;gt; &amp;lt;point&amp;gt;} .</description>
    </item>
    
    <item>
      <title>Install Packages</title>
      <link>https://libgeos.org/usage/install/</link>
      <pubDate>Mon, 04 Oct 2021 13:44:59 -0700</pubDate>
      
      <guid>https://libgeos.org/usage/install/</guid>
      <description>Red Hat Ubuntu Debian Amazon Linux Homebrew Macports Red Hat There is a GEOS package in the EPEL (Extra Packages for Enterprise Linux) repository.
# Add the EPEL repository yum -y install epel-release # Install the GEOS runtime and development packages rpm -Uvh geos geos-devel Ubuntu The Ubuntu GIS project maintains a collection of repositories with builds of common open source geospatial projects, including GEOS.
# Add the Ubuntu GIS PPA sudo apt-get install software-properties-common sudo add-apt-repository ppa:ubuntugis/ppa # Install the packages sudo apt-get install geos Debian The Debian GIS project maintains GEOS packages and pushes them into the appropriate Debian repositories.</description>
    </item>
    
  </channel>
</rss>
